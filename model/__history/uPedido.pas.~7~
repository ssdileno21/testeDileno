unit uPedido;

interface

uses
  System.Generics.Collections, uCliente, uPedidoItem;

type
  TPedido = class
  private
    FNumero: Integer;
    FDataEmissao: TDateTime;
    FCliente: TCliente;
    FValorTotal: Currency;

    function GetValorTotal: Currency;
  public
    constructor Create;
    destructor Destroy; override;


    property Numero: Integer read FNumero write FNumero;
    property DataEmissao: TDateTime read FDataEmissao write FDataEmissao;
    property Cliente: TCliente read FCliente write FCliente;

    property ValorTotal: Currency read GetValorTotal;
  end;

implementation

{ TPedido }

constructor TPedido.Create;
begin

end;

destructor TPedido.Destroy;
begin
  FItens.Free;
  inherited;
end;

function TPedido.GetValorTotal: Currency;
var
  Item: TPedidoItem;
begin
  Result := 0;
  for Item in FItens do
    Result := Result + (Item.Quantidade * Item.ValorUnitario);
end;

procedure TPedido.RemoverItem(aItem: TPedidoItem);
begin
  FItens.Remove(aItem);
end;

end.
